require 'rails_helper'

RSpec.describe "<%= class_name %>", type: :request do
  let(:<%= singular_table_name %>) { create(:<%= singular_table_name %>) }
  let(:valid_attributes) { attributes_for(:<%= singular_table_name %>) }

  describe "GET /<%= plural_name %>" do
    it "returns http success" do
      create(:<%= singular_table_name %>)
      get "<%= scoped_spec_routes[:index] %>"
      expect(response).to have_http_status(:success)
    end
  end

  describe "GET /<%= plural_name %>/:id" do
    it "returns http success" do
      get "<%= scoped_spec_routes[:show] %>"
      expect(response).to have_http_status(:success)
    end
  end

  describe "POST /<%= plural_name %>" do
    it "creates a new item" do
      expect do
        post "<%= scoped_spec_routes[:create] %>",
             params: { <%= singular_name %>: valid_attributes }
      end.to change(<%= class_name %>, :count).by(1)
    end
  end

  describe "PATCH /<%= plural_name %>/:id" do
    it "return http success" do
      patch "<%= scoped_spec_routes[:update] %>",
            params: { <%= singular_name %>: valid_attributes }
      expect(response).to have_http_status(:success)
    end
  end

  describe "DELETE /<%= plural_name %>/:id" do
    it "deletes an <%= plural_name %>" do
      item = create(:<%= singular_name %>)
      expect do
        delete "<%= scoped_spec_routes[:delete] %>"
      end.to change(<%= class_name %>, :count).by(-1)
    end
  end
end
