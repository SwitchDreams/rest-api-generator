require "rails_helper"

RSpec.describe "<%= controller_path %>", type: :request do
  let(:<%= singular_table_name %>) { create(:<%= singular_table_name %>) }

  path "<%= spec_routes[:index] %>" do
    get("list <%= plural_name %>") do

      response(200, "successful") do
        after do |example|
          example.metadata[:response][:content] = {
            'application/json' => {
              example: JSON.parse(response.body, symbolize_names: true)
            }
          }
        end
        run_test!
      end
    end

    post("create <%= singular_table_name %>") do
      response(200, "successful") do

        after do |example|
          example.metadata[:response][:content] = {
            'application/json' => {
              example: JSON.parse(response.body, symbolize_names: true)
            }
          }
        end
        run_test!
      end
    end
  end

  path "<%= spec_routes[:show] %>" do
    # You'll want to customize the parameter types...
    parameter name: 'id', in: :path, type: :string, description: 'id'

    get("show <%= singular_table_name %>") do

      response(200, "successful") do
        let(:id) { <%= singular_table_name %>.id }

        after do |example|
          example.metadata[:response][:content] = {
            'application/json' => {
              example: JSON.parse(response.body, symbolize_names: true)
          }
        }
        end
        run_test!
      end
    end


    patch("update <%= singular_table_name %>") do
      response(200, "successful") do
        let(:id) { <%= singular_table_name %>.id }

        after do |example|
          example.metadata[:response][:content] = {
            'application/json' => {
              example: JSON.parse(response.body, symbolize_names: true)
            }
          }
        end
        run_test!
      end
    end

    delete("delete plan") do
      response(200, "successful") do
        let(:id) { <%= singular_table_name %>.id }

        after do |example|
          example.metadata[:response][:content] = {
            "application/json" => {
              example: JSON.parse(response.body, symbolize_names: true)
            }
          }
        end
        run_test!
      end
    end
  end
end